{
  "name": "remark-github-plugin",
  "version": "0.0.0-semantic-release",
  "description": "Remark plugin to inline GitHub source code into markdown file as code blocks",
  "keywords": [
    "remark",
    "plugin",
    "remark-plugin",
    "github",
    "unified"
  ],
  "files": [
    "dist",
    "lib",
    "es"
  ],
  "author": "Huy Nguyen <me@huy.dev> (https://www.huy.dev/)",
  "license": "MIT",
  "dependencies": {
    "async-disk-cache": "2.0.0",
    "github-url-parse": "0.1.0",
    "lodash-es": "4.17.14",
    "node-fetch": "2.6.0",
    "parse-numeric-range": "0.0.2",
    "unist-util-visit": "1.4.1"
  },
  "main": "lib/index.js",
  "types": "./lib/index.d.ts",
  "module": "es/index.js",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/huy-nguyen/remark-github-plugin.git"
  },
  "scripts": {
    "commitmsg": "commitlint -e $GIT_PARAMS",
    "commit": "commit",
    "tslint": "tslint --project tsconfig.json --config tslint.json",
    "tslint:fix": "tslint --project tsconfig.json --config tslint.json --fix",
    "test": "jest --verbose --coverage",
    "test:watch": "jest --watch --verbose",
    "test:ci": "jest --config=jestCI.config.js --ci --verbose --coverage --runInBand --reporters=default --reporters=jest-junit",
    "generate:typedef": "tsc --declaration --outDir temp && mkdir -p lib &&  mv temp/index.d.ts lib/index.d.ts && rm -r temp",
    "typecheck": "tsc --noEmit",
    "eslint": "eslint .",
    "eslint:fix": "eslint . --fix",
    "tsc": "tsc --noEmit",
    "clean:lib": "rimraf lib",
    "clean:module": "rimraf es",
    "clean:dist": "rimraf dist",
    "clean": "npm run clean:lib && npm run clean:module && npm run clean:dist",
    "build:lib": "rollup -c -o lib/index.js -f cjs",
    "build:module": "rollup -c -o es/index.js -f es",
    "build:dist": "rollup -c -o dist/index.js -f umd --name RemarkGithubPlugin --environment minify",
    "build": "npm run clean && npm run typecheck && npm run build:lib && npm run build:dist && npm run build:module && npm run generate:typedef",
    "validate": "npm run tsc && npm run test",
    "lint": "npm run eslint && npm run tslint",
    "publish": "semantic-release",
    "codecov": "codecov",
    "contributors:add": "all-contributors add",
    "contributors:generate": "all-contributors generate",
    "greenkeeper-lockfile-update": "greenkeeper-lockfile-update",
    "greenkeeper-lockfile-upload": "greenkeeper-lockfile-upload"
  },
  "devDependencies": {
    "@babel/core": "7.2.2",
    "@babel/preset-env": "7.2.3",
    "@babel/preset-typescript": "7.13.0",
    "@cid-harvard/eslint-config": "0.1.2",
    "@cid-harvard/tslint-config": "0.3.0",
    "@commitlint/cli": "7.5.2",
    "@commitlint/config-conventional": "7.3.1",
    "@commitlint/prompt-cli": "9.1.1",
    "@types/lodash-es": "4.17.3",
    "@types/node-fetch": "2.3.7",
    "all-contributors-cli": "6.7.0",
    "babel-core": "7.0.0-bridge.0",
    "babel-eslint": "10.0.2",
    "babel-jest": "26.0.1",
    "codecov": "3.6.5",
    "dotenv": "8.0.0",
    "eslint": "6.0.0",
    "eslint-plugin-jest": "22.6.4",
    "eslint-plugin-react": "7.13.0",
    "greenkeeper-lockfile": "1",
    "husky": "2.4.1",
    "jest": "26.0.1",
    "jest-junit": "6.4.0",
    "remark": "12.0.0",
    "rimraf": "2.6.3",
    "rollup": "1.15.6",
    "rollup-plugin-babel": "4.3.2",
    "rollup-plugin-commonjs": "10.0.0",
    "rollup-plugin-json": "4.0.0",
    "rollup-plugin-node-resolve": "5.0.3",
    "rollup-plugin-terser": "5.3.0",
    "semantic-release": "15.13.16",
    "tslint": "6.1.2",
    "typescript": "3.2.4"
  },
  "greenkeeper": {
    "ignore": [
      "tslint",
      "@babel/core",
      "@babel/preset-env"
    ],
    "commitMessages": {
      "initialBadge": "docs: Add Greenkeeper badge",
      "initialDependencies": "build: update dependencies",
      "initialBranches": "build: whitelist greenkeeper branches",
      "dependencyUpdate": "build: update ${dependency} to version ${version}",
      "devDependencyUpdate": "build: update ${dependency} to version ${version}",
      "dependencyPin": "build: pin ${dependency} to ${oldVersion}",
      "devDependencyPin": "build: pin ${dependency} to ${oldVersion}"
    }
  }
}
